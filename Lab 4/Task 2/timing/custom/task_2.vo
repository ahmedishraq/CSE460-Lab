// Copyright (C) 1991-2008 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II"
// VERSION "Version 8.1 Build 163 10/28/2008 SJ Web Edition"

// DATE "11/01/2022 16:39:00"

// 
// Device: Altera EPF10K30ETC144-1 Package TQFP144
// 

// 
// This Verilog file should be used for Custom Verilog HDL only
// 

`timescale 1 ps/ 1 ps

module task_2 (
	clk,
	reset,
	cash_in,
	cash_return,
	purchase,
	next_state,
	current_state);
input 	clk;
input 	reset;
input 	[0:1] cash_in;
output 	[1:0] cash_return;
output 	purchase;
output 	[1:0] next_state;
output 	[1:0] current_state;

wire gnd = 1'b0;
wire vcc = 1'b1;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("task_2_v.sdo");
// synopsys translate_on

wire \Mux3~103_combout ;
wire \cash_in[0]~dataout ;
wire \reset~dataout ;
wire \clk~dataout ;
wire \next_state[0]~reg0_regout ;
wire \next_state[1]~reg0_regout ;
wire \Mux4~2_combout ;
wire \cash_return[0]~reg0_regout ;
wire \cash_in[1]~dataout ;
wire \Equal0~29_combout ;
wire \Mux3~108 ;
wire \Mux3~105_combout ;
wire \cash_return[1]~reg0_regout ;
wire \Mux2~2_combout ;
wire \purchase~reg0_regout ;
wire \current_state[0]~reg0_regout ;
wire \current_state[1]~reg0_regout ;


// atom is at PIN_124
flex10ke_io \cash_in[0]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\cash_in[0]~dataout ),
	.padio(cash_in[0]));
// synopsys translate_off
defparam \cash_in[0]~I .feedback_mode = "from_pin";
defparam \cash_in[0]~I .operation_mode = "input";
defparam \cash_in[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_126
flex10ke_io \reset~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\reset~dataout ),
	.padio(reset));
// synopsys translate_off
defparam \reset~I .feedback_mode = "from_pin";
defparam \reset~I .operation_mode = "input";
defparam \reset~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_55
flex10ke_io \clk~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\clk~dataout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .feedback_mode = "from_pin";
defparam \clk~I .operation_mode = "input";
defparam \clk~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC1_B3
flex10ke_lcell \next_state[0]~reg0 (
// Equation(s):
// \next_state[0]~reg0_regout  = DFFEA(!\next_state[1]~reg0_regout  & (\cash_in[1]~dataout  & (!\cash_in[0]~dataout ) # !\cash_in[1]~dataout  & !\next_state[0]~reg0_regout  & \cash_in[0]~dataout ), GLOBAL(\clk~dataout ), !GLOBAL(\reset~dataout ), , , , )

	.dataa(\cash_in[1]~dataout ),
	.datab(\next_state[0]~reg0_regout ),
	.datac(\cash_in[0]~dataout ),
	.datad(\next_state[1]~reg0_regout ),
	.aclr(\reset~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\next_state[0]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \next_state[0]~reg0 .clock_enable_mode = "false";
defparam \next_state[0]~reg0 .lut_mask = "001a";
defparam \next_state[0]~reg0 .operation_mode = "normal";
defparam \next_state[0]~reg0 .output_mode = "reg_only";
defparam \next_state[0]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC6_B3
flex10ke_lcell \next_state[1]~reg0 (
// Equation(s):
// \next_state[1]~reg0_regout  = DFFEA(\next_state[1]~reg0_regout  & (!\next_state[0]~reg0_regout ) # !\next_state[1]~reg0_regout  & (\cash_in[1]~dataout  & !\cash_in[0]~dataout  & \next_state[0]~reg0_regout  # !\cash_in[1]~dataout  & \cash_in[0]~dataout  & 
// !\next_state[0]~reg0_regout ), GLOBAL(\clk~dataout ), !GLOBAL(\reset~dataout ), , , , )

	.dataa(\cash_in[1]~dataout ),
	.datab(\next_state[1]~reg0_regout ),
	.datac(\cash_in[0]~dataout ),
	.datad(\next_state[0]~reg0_regout ),
	.aclr(\reset~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\next_state[1]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \next_state[1]~reg0 .clock_enable_mode = "false";
defparam \next_state[1]~reg0 .lut_mask = "02dc";
defparam \next_state[1]~reg0 .operation_mode = "normal";
defparam \next_state[1]~reg0 .output_mode = "reg_only";
defparam \next_state[1]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC4_B3
flex10ke_lcell \Mux4~2 (
// Equation(s):
// \Mux4~2_combout  = \next_state[0]~reg0_regout  & (\next_state[1]~reg0_regout  # !\cash_in[1]~dataout  & !\cash_in[0]~dataout ) # !\next_state[0]~reg0_regout  & \cash_in[1]~dataout  & \cash_in[0]~dataout  & !\next_state[1]~reg0_regout 

	.dataa(\cash_in[1]~dataout ),
	.datab(\cash_in[0]~dataout ),
	.datac(\next_state[0]~reg0_regout ),
	.datad(\next_state[1]~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux4~2_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Mux4~2 .clock_enable_mode = "false";
defparam \Mux4~2 .lut_mask = "f018";
defparam \Mux4~2 .operation_mode = "normal";
defparam \Mux4~2 .output_mode = "comb_only";
defparam \Mux4~2 .packed_mode = "false";
// synopsys translate_on

// atom is at LC3_B3
flex10ke_lcell \cash_return[0]~reg0 (
// Equation(s):
// \cash_return[0]~reg0_regout  = DFFEA(\next_state[1]~reg0_regout  & (\Mux4~2_combout  & (\cash_in[0]~dataout ) # !\Mux4~2_combout  & \cash_return[0]~reg0_regout ) # !\next_state[1]~reg0_regout  & (\Mux4~2_combout ), GLOBAL(\clk~dataout ), 
// !GLOBAL(\reset~dataout ), , , , )

	.dataa(\cash_return[0]~reg0_regout ),
	.datab(\next_state[1]~reg0_regout ),
	.datac(\Mux4~2_combout ),
	.datad(\cash_in[0]~dataout ),
	.aclr(\reset~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\cash_return[0]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \cash_return[0]~reg0 .clock_enable_mode = "false";
defparam \cash_return[0]~reg0 .lut_mask = "f838";
defparam \cash_return[0]~reg0 .operation_mode = "normal";
defparam \cash_return[0]~reg0 .output_mode = "reg_only";
defparam \cash_return[0]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_54
flex10ke_io \cash_in[1]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\cash_in[1]~dataout ),
	.padio(cash_in[1]));
// synopsys translate_off
defparam \cash_in[1]~I .feedback_mode = "from_pin";
defparam \cash_in[1]~I .operation_mode = "input";
defparam \cash_in[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC4_B2
flex10ke_lcell \Equal0~29 (
// Equation(s):
// \Equal0~29_combout  = \cash_in[1]~dataout  & \cash_in[0]~dataout 

	.dataa(vcc),
	.datab(vcc),
	.datac(\cash_in[1]~dataout ),
	.datad(\cash_in[0]~dataout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~29_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Equal0~29 .clock_enable_mode = "false";
defparam \Equal0~29 .lut_mask = "f000";
defparam \Equal0~29 .operation_mode = "normal";
defparam \Equal0~29 .output_mode = "comb_only";
defparam \Equal0~29 .packed_mode = "false";
// synopsys translate_on

// atom is at LC2_B2
flex10ke_lcell \Mux3~103 (
// Equation(s):
// \Mux3~108  = \next_state[0]~reg0_regout  & (!\Equal0~29_combout ) # !\next_state[0]~reg0_regout  & (!\next_state[1]~reg0_regout  # !\cash_return[1]~reg0_regout )

	.dataa(\cash_return[1]~reg0_regout ),
	.datab(\next_state[1]~reg0_regout ),
	.datac(\next_state[0]~reg0_regout ),
	.datad(\Equal0~29_combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux3~103_combout ),
	.regout(),
	.cout(),
	.cascout(\Mux3~108 ));
// synopsys translate_off
defparam \Mux3~103 .clock_enable_mode = "false";
defparam \Mux3~103 .lut_mask = "07f7";
defparam \Mux3~103 .operation_mode = "normal";
defparam \Mux3~103 .output_mode = "none";
defparam \Mux3~103 .packed_mode = "false";
// synopsys translate_on

// atom is at LC3_B2
flex10ke_lcell \Mux3~105 (
// Equation(s):
// \Mux3~105_combout  = (\cash_in[0]~dataout  # \cash_in[1]~dataout  # !\next_state[1]~reg0_regout  # !\next_state[0]~reg0_regout ) & CASCADE(\Mux3~108 )

	.dataa(\cash_in[0]~dataout ),
	.datab(\cash_in[1]~dataout ),
	.datac(\next_state[0]~reg0_regout ),
	.datad(\next_state[1]~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(\Mux3~108 ),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux3~105_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Mux3~105 .clock_enable_mode = "false";
defparam \Mux3~105 .lut_mask = "efff";
defparam \Mux3~105 .operation_mode = "normal";
defparam \Mux3~105 .output_mode = "comb_only";
defparam \Mux3~105 .packed_mode = "false";
// synopsys translate_on

// atom is at LC6_B2
flex10ke_lcell \cash_return[1]~reg0 (
// Equation(s):
// \cash_return[1]~reg0_regout  = DFFEA(!\Mux3~105_combout , GLOBAL(\clk~dataout ), !GLOBAL(\reset~dataout ), , , , )

	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\Mux3~105_combout ),
	.aclr(\reset~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\cash_return[1]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \cash_return[1]~reg0 .clock_enable_mode = "false";
defparam \cash_return[1]~reg0 .lut_mask = "00ff";
defparam \cash_return[1]~reg0 .operation_mode = "normal";
defparam \cash_return[1]~reg0 .output_mode = "reg_only";
defparam \cash_return[1]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC5_B2
flex10ke_lcell \Mux2~2 (
// Equation(s):
// \Mux2~2_combout  = \next_state[0]~reg0_regout  & (\next_state[1]~reg0_regout ) # !\next_state[0]~reg0_regout  & (\next_state[1]~reg0_regout  & \purchase~reg0_regout  # !\next_state[1]~reg0_regout  & (\Equal0~29_combout ))

	.dataa(\next_state[0]~reg0_regout ),
	.datab(\purchase~reg0_regout ),
	.datac(\next_state[1]~reg0_regout ),
	.datad(\Equal0~29_combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux2~2_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \Mux2~2 .clock_enable_mode = "false";
defparam \Mux2~2 .lut_mask = "e5e0";
defparam \Mux2~2 .operation_mode = "normal";
defparam \Mux2~2 .output_mode = "comb_only";
defparam \Mux2~2 .packed_mode = "false";
// synopsys translate_on

// atom is at LC8_B2
flex10ke_lcell \purchase~reg0 (
// Equation(s):
// \purchase~reg0_regout  = DFFEA(\next_state[0]~reg0_regout  & (\cash_in[0]~dataout  # \cash_in[1]~dataout  & \Mux2~2_combout ) # !\next_state[0]~reg0_regout  & (\Mux2~2_combout ), GLOBAL(\clk~dataout ), !GLOBAL(\reset~dataout ), , , , )

	.dataa(\cash_in[1]~dataout ),
	.datab(\Mux2~2_combout ),
	.datac(\next_state[0]~reg0_regout ),
	.datad(\cash_in[0]~dataout ),
	.aclr(\reset~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\purchase~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \purchase~reg0 .clock_enable_mode = "false";
defparam \purchase~reg0 .lut_mask = "fc8c";
defparam \purchase~reg0 .operation_mode = "normal";
defparam \purchase~reg0 .output_mode = "reg_only";
defparam \purchase~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC1_B2
flex10ke_lcell \current_state[0]~reg0 (
// Equation(s):
// \current_state[0]~reg0_regout  = DFFEA(\next_state[0]~reg0_regout , GLOBAL(\clk~dataout ), !GLOBAL(\reset~dataout ), , , , )

	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\next_state[0]~reg0_regout ),
	.aclr(\reset~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\current_state[0]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \current_state[0]~reg0 .clock_enable_mode = "false";
defparam \current_state[0]~reg0 .lut_mask = "ff00";
defparam \current_state[0]~reg0 .operation_mode = "normal";
defparam \current_state[0]~reg0 .output_mode = "reg_only";
defparam \current_state[0]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at LC2_B3
flex10ke_lcell \current_state[1]~reg0 (
// Equation(s):
// \current_state[1]~reg0_regout  = DFFEA(\next_state[1]~reg0_regout , GLOBAL(\clk~dataout ), !GLOBAL(\reset~dataout ), , , , )

	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\next_state[1]~reg0_regout ),
	.aclr(\reset~dataout ),
	.aload(gnd),
	.clk(\clk~dataout ),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\current_state[1]~reg0_regout ),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \current_state[1]~reg0 .clock_enable_mode = "false";
defparam \current_state[1]~reg0 .lut_mask = "ff00";
defparam \current_state[1]~reg0 .operation_mode = "normal";
defparam \current_state[1]~reg0 .output_mode = "reg_only";
defparam \current_state[1]~reg0 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_9
flex10ke_io \cash_return[0]~I (
	.datain(\cash_return[0]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(cash_return[0]));
// synopsys translate_off
defparam \cash_return[0]~I .feedback_mode = "none";
defparam \cash_return[0]~I .operation_mode = "output";
defparam \cash_return[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_10
flex10ke_io \cash_return[1]~I (
	.datain(\cash_return[1]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(cash_return[1]));
// synopsys translate_off
defparam \cash_return[1]~I .feedback_mode = "none";
defparam \cash_return[1]~I .operation_mode = "output";
defparam \cash_return[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_83
flex10ke_io \purchase~I (
	.datain(\purchase~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(purchase));
// synopsys translate_off
defparam \purchase~I .feedback_mode = "none";
defparam \purchase~I .operation_mode = "output";
defparam \purchase~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_111
flex10ke_io \next_state[0]~I (
	.datain(\next_state[0]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(next_state[0]));
// synopsys translate_off
defparam \next_state[0]~I .feedback_mode = "none";
defparam \next_state[0]~I .operation_mode = "output";
defparam \next_state[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_98
flex10ke_io \next_state[1]~I (
	.datain(\next_state[1]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(next_state[1]));
// synopsys translate_off
defparam \next_state[1]~I .feedback_mode = "none";
defparam \next_state[1]~I .operation_mode = "output";
defparam \next_state[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_87
flex10ke_io \current_state[0]~I (
	.datain(\current_state[0]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(current_state[0]));
// synopsys translate_off
defparam \current_state[0]~I .feedback_mode = "none";
defparam \current_state[0]~I .operation_mode = "output";
defparam \current_state[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_81
flex10ke_io \current_state[1]~I (
	.datain(\current_state[1]~reg0_regout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(current_state[1]));
// synopsys translate_off
defparam \current_state[1]~I .feedback_mode = "none";
defparam \current_state[1]~I .operation_mode = "output";
defparam \current_state[1]~I .reg_source_mode = "none";
// synopsys translate_on

endmodule
